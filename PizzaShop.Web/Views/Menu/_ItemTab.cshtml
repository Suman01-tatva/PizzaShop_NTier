@model PizzaShop.Entity.ViewModels.ItemTabViewModel
@{
    var PageSize = Model.PageSize;
    var PageIndex = Model.PageIndex;
    var TotalPage = Model.TotalPage;
    var SearchString = Model.SearchString;
}
<section>
    <div class="row mx-0">
        <aside class="col-md-3" style="background-color: #f5f5f5">
            <!-- Category header -->
            <div class="d-flex flex-wrap justify-content-between align-items-center p-2">
                <h5>Categories</h5>
                <button class="btn btn-outline-primary" id="Addcategory" data-bs-target="#addCategoryModal"
                    data-bs-toggle="modal">
                    <i class="fa-solid fa-plus"></i>
                </button>
            </div>
            <!-- Category list -->
            <div id="categoryList">
                <partial name="_CategoryList" model="Model.categoryList" />
            </div>
        </aside>
        <div class="col-md-9 border-start border-primary bg-light">
            <div>
                <!-- Item header -->
                <h5 class="p-2 mb-0 text-primary">Items</h5>
                <div class="d-flex justify-content-end align-items-center mb-3">
                    <div class="form-input-div d-flex justify-content-between me-3 position-relative">
                        <input type="text" placeholder="Search" class="form-control p-2 d-none d-sm-block "
                            name="search" minlength="5" required id="searchString" />
                        <span class="form-input-icon position-absolute search-icon"><i class="fa-solid fa-search"
                                id="eye-icon" style="color: gray"></i>
                        </span>
                    </div>
                    <button class="btn btn-outline-secondary me-3">
                        <i class="fa-solid fa-trash"></i>
                    </button>
                    <button class="btn btn-primary me-3">
                        <i class="fa-solid fa-plus"></i>New Item
                    </button>
                </div>

                <!-- Items Table -->
                @* <section class="table-responsive">
                    <table class="table user-table mb-0 menu-table">
                        <thead>
                            <tr>
                                <th>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value=""
                                            id="flexCheckDefault" />
                                    </div>
                                </th>
                                <th scope="col">Name</th>
                                <th scope="col">ItemType</th>
                                <th scope="col">Rate</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Available</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>*@
                @* <tbody class="table-group-divider menuItems" id="itemList"> *@
                <div id="itemList">
                    <partial name="_ItemListPartial" model="Model" />
                </div>
                @* </tbody> *@
                @* </table>
</section>
<div class="d-flex justify-content-end align-items-center mt-2">
    <p class="mb-0">Items Per page</p>
    <select class="ms-3" aria-label="Default select example" id="pageSize">
        <option value="5" selected="@(PageSize == 5 ? true : false)">5</option>
        <option value="10" selected="@(PageSize == 10 ? true : false)">10</option>
        <option value="15" selected="@(PageSize == 15 ? true : false)">15</option>
    </select>

    <p class="mb-0 ms-2 me-2">Select @PageIndex out of <span>@TotalPage</span></p>
    @if (PageIndex > 1)
    {
        <span class="btn btn-outline-secondary me-1 px-3 py-0" name="PageIndex" id="Previous">
            <i class="fa-solid fa-less-than fa-sm" style="height: 15px"></i>
        </span>
    }
    else
    {
        <button class="btn btn-outline-secondary me-1 px-3 py-0" name="PageIndex" disabled>
            <i class="fa-solid fa-less-than fa-sm" style="height: 15px"></i>
        </button>
    }

    @if (PageIndex < TotalPage)
    {
        <a class="btn btn-outline-secondary px-3 py-0" name="PageIndex" id="Next">
            <i class="fa-solid fa-greater-than fa-sm"></i>
        </a>
    }
    else
    {
        <button class="btn btn-outline-secondary px-3 py-0" name="PageIndex" disabled>
            <i class="fa-solid fa-greater-than fa-sm"></i>
        </button>
    }
</div> *@
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        @* $(document).ready(function () {
            $("#addNewCategoryForm").submit(function (event) {
                event.preventDefault(); // Prevent default form submission

                var categoryName = $("#categoryName").val();
                var categoryDescription = $("#categoryDescription").val();
                $.ajax({
                    type: "POST",
                    url: '/Menu/AddNewCategory',
                    data: {
                        Name: categoryName,
                        Description: categoryDescription
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#addCategoryModal').modal('hide');
                            console.log(response.message);
                            toastr.success(response.message);
                                location.reload(); // Reload the page to show the new category
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("An error occurred while adding the category. Please try again.");
                    }
                });
            });
        }); *@
            $("#submitNewCategory").click(function () {

                var formData = new FormData();
                formData.append("Name", categoryName);
                formData.append("Description", categoryDescription);

                $.ajax({
                    type: "POST",
                    url: '/Menu/AddNewCategory',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#addCategoryModal').modal('hide');
                            $('#categoryList').html(response);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function () {
                        toastr.error("An error occurred while adding the category. Please try again.");
                    }
                });
            });

        $("#itemCategory").click(function () {
            var categoryId = $(this).data("id");
            console.log("id" + categoryId);
            $.ajax({
                url: '/Menu/GetItemsByCategory',
                type: 'GET',
                data: { id: categoryId, pageSize: @PageSize, pageIndex: @PageIndex, SearchString: @SearchString },
                success: function (response) {
                    console.log(response);
                    $("#itemList").html(response);
                }
            })
        })                                                                                                                                                      
    </script>

    <script>
        var pageIndex = @Model.PageIndex;
        @* function GetFilteredItems() {
            var SearchString = $("#searchString").val();
            var pageSize = $("#pageSize").val();
            console.log($("#searchString").val())
            $.ajax({
                url: "/Menu/GetItemsByCategory",
                type: "GET",
                data: {
                    id: categoryId,
                    pageIndex: pageIndex,
                    pageSize: pageSize,
                    searchString: SearchString
                },
                success: function (data) {
                    console.log("items", data);
                    $("#itemList").html(data);
                }
            })
        }

        $('#pageSize').change(function () {
            var pageSize = @Model.PageSize
                        var pageIndex = 1
            GetFilteredItems();
        }) *@

            $('#searchString').keyup(function () {
                pageIndex = 1
                pageSize = @Model.PageSize

                    GetFilteredItems();
            })

        $("#Previous").click(function () {
            console.log("prev")
            pageIndex -= 1;
            GetFilteredItems()
        })

        $('#Next').click(function () {
            $("#PreviousBtn").attr('disabled', false)
            console.log("next")
            pageIndex += 1;
            GetFilteredItems()
        })
    </script>
}