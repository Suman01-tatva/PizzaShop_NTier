@model PizzaShop.Entity.ViewModels.ModifierTabViewModel;

<section>
    <div class="row mx-0">
        <aside class="col-md-3 left-section" style="background-color: #f5f5f5">
            <!-- Modifier header -->
            <div class="d-flex flex-wrap justify-content-between align-items-center p-2">
                <h5>Modifier Group</h5>
                <button class="outline-btn py-1 px-2" id="AddModifier" data-bs-target="#addModifierGroupModal"
                    data-bs-toggle="modal">
                    <i class="fa-solid fa-plus"></i>
                </button>
            </div>
            <!-- ModifierGroup list -->
            <partial name="_ModifierGroup" model="Model.modifierGroup" />
            </partial>
        </aside>
        <div class="col-md-9 border-start border-primary bg-white">
            <div>
                <!-- Modifier header -->
                <h5 class="p-2 mb-0 text-primary">Modifiers</h5>
                <div class="d-flex justify-content-end align-items-center mb-3">
                    <div class="form-input-div d-flex justify-content-between me-3 position-relative">
                        <input type="text" placeholder="Search" class="form-control p-2 d-none d-sm-block" name="search"
                            minlength="5" required id="searchModifier" />
                        <span class="form-input-icon position-absolute search-icon"><i class="fa-solid fa-search"
                                id="eye-icon" style="color: gray"></i>
                        </span>
                    </div>
                    <button class="btn btn-outline-secondary me-3" id="multiDeleteModifiersBtn">
                        <i class="fa-solid fa-trash"></i>
                    </button>
                    <button class="fill-btn me-3" id="addNewModifier">
                        <i class="fa-solid fa-plus"></i> New Modifier
                    </button>
                </div>

                <!-- Modifier Table -->
                <div id="modifierList">
                    <partial name="_Modifier" model="Model" />
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add Modifier group Modal -->
<div class="modal fade" id="addModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Add Modifier Group
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-1">
                <form action="" class="p-3">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="modifierName" placeholder="Category" />
                        <label for="modifierName">Name</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="modifierDesc"></textarea>
                        <label for="modifierDesc">Description</label>
                    </div>
                </form>
            </div>
            <div>
                <button class="btn btn-light border-0 text-primary bg-light" type="button">
                    <i class="fa-solid fa-plus me-2"></i>Add Existing
                    Modifier
                </button>
            </div>
            <div class="modal-footer d-flex justify-content-end border-0">
                <button type="button" class="btn btn-primary">
                    Save
                </button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modifier group -->
<div class="modal fade" id="editModifierModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Edit Modifier Group
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-1">
                <form action="" class="p-3">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="modifierName" placeholder="Category" />
                        <label for="modifierName">Name</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="modifierDesc"></textarea>
                        <label for="modifierDesc">Description</label>
                    </div>
                </form>
            </div>
            <div>
                <button class="btn btn-light border-0 text-primary bg-light" type="button">
                    <i class="fa-solid fa-plus me-2"></i>Add Existing
                    Modifier
                </button>
            </div>
            <div class="modal-footer d-flex justify-content-end border-0">
                <button type="button" class="btn btn-primary">
                    Save
                </button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

</section>
</div>
<script>
    $("#addNewModifier").click(function () {
        $.get('@Url.Action("AddModifier", "Menu")', function (data) {
            console.log("Modifier add");
            $("#AddModifierPartial").html(data);
            $("#addModifierModal").modal('show');
        })
    })

    $('.modifierGroup').click(function () {
        modifierGroupId = $(this).data("id");
        console.log("ModifierGroupId :", modifierGroupId);
        $.ajax({
            url: '/Menu/GetModifiersByModifierGroup',
            type: 'GET',
            data: { modifierGroupId: modifierGroupId, pageSize: @Model.PageSize, pageIndex: @Model.PageIndex, searchString: "" },
            success: function (response) {
                $('#modifierList').html(response);
            }
        })
    })

    $('#multiDeleteModifiersBtn').click(function () {
        if (deleteModifierIds.length == 0) {
            toastr.info("Select at Least One Item");
        } else {
            $('#deleteMultipleModifierModal').modal('show');
        }
    })
    $('#multiDeleteItemBtn').click(function () {
        $.ajax({
            url: "/Menu/DeleteMultipleModifier",
            type: 'POST',
            data: {
                itemIds: deleteModifierIds
            },
            success: function (response) {
                if (response == null)
                    window.location.href = "/Auth/Login"
                if (response.isSuccess) {
                    GetFilteredItems();
                    toastr.success(response.message);
                    $("#deleteMultipleModifierModal").modal('hide');
                } else {
                    toastr.error(response.message);
                }
            },
            error: handleAjaxError
        })
    })
     function handleAjaxError(xhr, status, error) {
        if (xhr.status === 401) {
            toastr.error("You are not authenticated. Please log in.");
        } else if (xhr.status === 403) {
            toastr.error(xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : "You are not authorized to perform this action.");
            $('.modal-backdrop').remove();
        } else {
            toastr.error("An error occurred while processing your request. Please try again.");
            console.error("Error details:", status, error, xhr.responseText);
        }
    }
</script>